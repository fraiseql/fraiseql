version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fraiseql_benchmark
    ports:
      - "5435:5432"
    volumes:
      - ./benchmark_data.sql:/docker-entrypoint-initdb.d/01-init.sql
    command: >
      postgres
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c work_mem=4MB
      -c min_wal_size=1GB
      -c max_wal_size=4GB
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  fraiseql:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/fraiseql_benchmark
      PYTHONUNBUFFERED: "1"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./examples:/app/examples
    command: >
      sh -c "
        cd /app &&
        pip install -e . &&
        python -m uvicorn fraiseql.server:app --host 0.0.0.0 --port 8000
      "

  java-benchmark:
    build:
      context: ./java-benchmark
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/fraiseql_benchmark
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      JAVA_OPTS: >
        -Xms512m
        -Xmx1024m
        -XX:+UseG1GC
        -XX:MaxGCPauseMillis=100
        -XX:+ParallelRefProcEnabled
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  benchmark-runner:
    build:
      context: .
      dockerfile: Dockerfile.benchmark
    depends_on:
      fraiseql:
        condition: service_started
      java-benchmark:
        condition: service_healthy
    environment:
      PYTHONUNBUFFERED: "1"
      DOCKER_ENV: "true"
    volumes:
      - ./benchmark_results:/app/results
    command: >
      sh -c "
        sleep 10 &&
        python benchmark_runner.py
      "

networks:
  default:
    driver: bridge
