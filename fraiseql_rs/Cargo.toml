[package]
name = "fraiseql_rs"
version = "0.2.0"
edition = "2021"
authors = ["FraiseQL Contributors"]
description = "Ultra-fast GraphQL JSON transformation in Rust for FraiseQL"
readme = "README.md"
repository = "https://github.com/fraiseql/fraiseql"
license = "MIT"
keywords = ["graphql", "json", "performance", "pyo3", "rust"]
categories = ["web-programming", "api-bindings"]

[features]
default = ["simd"]
simd = []
dhat-heap = []

[lib]
name = "fraiseql_rs"
crate-type = ["cdylib", "rlib"]

[dependencies]
pyo3 = { version = "0.25.0", features = ["extension-module"] }

# JSON parsing and serialization (zero-copy where possible)
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Fast string operations
# Note: Will add for Phase 2 (camelCase optimization)
# smallvec = "1.13"

# SIMD support
packed_simd = { version = "0.3", optional = true }

[dev-dependencies]
# Testing
pyo3 = { version = "0.25.0", features = ["auto-initialize"] }

# Benchmarking infrastructure (Phase 0)
criterion = { version = "0.5", features = ["html_reports"] }
dhat = "0.3"  # Heap profiling

# Benchmark targets (Phase 0)
[[bench]]
name = "pipeline"
harness = false

[[bench]]
name = "memory"
harness = false

[[bench]]
name = "core_benchmark"
harness = false

# Binary targets removed - use benches/ for performance testing

[profile.release]
opt-level = 3
lto = "fat"              # Link-time optimization across all crates
codegen-units = 1        # Better optimization (slower compile)
panic = "abort"          # Smaller binary, faster unwinding
strip = true             # Remove debug symbols
overflow-checks = false  # Disable overflow checks in release
incremental = false      # Disable incremental compilation for better optimization

[profile.release.package."*"]
opt-level = 3
codegen-units = 1
overflow-checks = false
incremental = false

# Profile-guided optimization (PGO) profile
[profile.release-pgo]
inherits = "release"
# PGO will be enabled when we have training data

# Benchmark profile for accurate measurements
[profile.bench]
opt-level = 3
lto = "fat"
codegen-units = 1
overflow-checks = false
incremental = false

[build-dependencies]
# Detect CPU features at compile time
target-features = "0.1"
