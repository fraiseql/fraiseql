# Tox configuration for FraiseQL
# Tests across Python 3.11, 3.12, and 3.13

[tox]
envlist =
    py311
    py312
    py313
    lint
    type-check
    docs
skip_missing_interpreters = true
isolated_build = true

[testenv]
description = Run tests with pytest
deps =
    pytest>=8.3.5
    pytest-asyncio>=1.0.0
    pytest-timeout>=2.4.0
    pytest-xdist>=3.5.0
    pytest-cov>=4.0.0
    pytest-mock>=3.11.0
    faker>=37.5.3
    testcontainers[postgres]>=4.10.0
    docker>=7.1.0
commands =
    pytest {posargs:--tb=short -v}
passenv =
    HOME
    USER
    CI
    GITHUB_*
    DOCKER_*
setenv =
    PYTHONPATH = {toxinidir}/src
    PYTEST_TIMEOUT = 300

[testenv:py311]
description = Run tests on Python 3.11
basepython = python3.11

[testenv:py312]
description = Run tests on Python 3.12
basepython = python3.12

[testenv:py313]
description = Run tests on Python 3.13
basepython = python3.13

[testenv:lint]
description = Run code quality checks with ruff
basepython = python3.11
deps =
    ruff>=0.13.0
skip_install = true
commands =
    ruff check src/ tests/ examples/
    ruff format --check src/ tests/ examples/

[testenv:type-check]
description = Run type checking with pyright
basepython = python3.11
deps =
    pyright>=1.1.405
commands =
    pyright src/fraiseql

[testenv:docs]
description = Build documentation
basepython = python3.11
deps =
    mkdocs>=1.5.0
    mkdocs-material>=9.0.0
    pymdown-extensions>=10.0
commands =
    mkdocs build --strict

[testenv:coverage]
description = Run tests with coverage reporting
basepython = python3.11
deps =
    {[testenv]deps}
    pytest-cov>=4.0.0
commands =
    pytest --cov=fraiseql --cov-report=term-missing --cov-report=html --cov-report=xml {posargs}

[testenv:integration]
description = Run integration tests only
basepython = python3.11
deps = {[testenv]deps}
commands =
    pytest tests/integration/ {posargs:--tb=short -v}

[testenv:unit]
description = Run unit tests only (fast)
basepython = python3.11
deps = {[testenv]deps}
commands =
    pytest tests/unit/ {posargs:--tb=short -v}

[testenv:examples]
description = Test all examples
basepython = python3.11
deps = {[testenv]deps}
commands =
    pytest examples/ {posargs:--tb=short -v}

[testenv:quick]
description = Quick test run (core tests only, parallel)
basepython = python3.11
deps = {[testenv]deps}
commands =
    pytest -m core -n auto {posargs:--tb=short}

[testenv:build]
description = Build package for distribution
basepython = python3.11
skip_install = true
deps =
    build>=1.0.0
    twine>=6.1.0
commands =
    python -m build
    twine check dist/*

[testenv:clean]
description = Clean up build artifacts and cache
skip_install = true
allowlist_externals =
    rm
    find
commands =
    rm -rf build/ dist/ .eggs/ *.egg-info
    rm -rf .tox/ .pytest_cache/ .coverage htmlcov/
    find . -type d -name __pycache__ -exec rm -rf {} +
    find . -type f -name "*.pyc" -delete
