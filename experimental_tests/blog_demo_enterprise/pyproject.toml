[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "blog-demo-enterprise"
version = "0.1.0"
description = "Enterprise Multi-Tenant Blog Demo showcasing FraiseQL"
readme = "README.md"
authors = [
    {name = "FraiseQL Team", email = "team@fraiseql.dev"}
]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.11"
dependencies = [
    "fraiseql @ file:///home/lionel/code/fraiseql",
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "psycopg[pool]>=3.1.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "python-jose[cryptography]>=3.3.0",  # For Auth0 JWT handling
    "httpx>=0.25.0",  # For Auth0 API calls
    "python-multipart>=0.0.6",  # For form data
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-xdist>=3.5.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.11.0",
    "testcontainers[postgres]>=4.0.0",
    # Code quality
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
    # Development utilities
    "faker>=24.0.0",
    "factory-boy>=3.2.1",
    "ipython>=8.17.0",
    "rich>=13.7.0",  # Better console output
]

[project.urls]
Homepage = "https://github.com/fraiseql/fraiseql"
Documentation = "https://docs.fraiseql.dev"
Repository = "https://github.com/fraiseql/fraiseql.git"
Issues = "https://github.com/fraiseql/fraiseql/issues"

[tool.setuptools.packages.find]
where = ["src"]
include = ["blog*"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=blog",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
]
testpaths = ["tests"]
pythonpath = ["src"]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore:function ham_deprecated:DeprecationWarning",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "multi_tenant: marks tests as multi-tenant specific",
    "auth: marks tests requiring authentication",
    "performance: marks tests as performance tests",
]

[tool.ruff]
target-version = "py310"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.isort]
known-first-party = ["blog"]

[tool.mypy]
python_version = "3.10"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
