name: Quality Gate

# This workflow provides comprehensive quality checks that must pass
# before any code can be merged to main or released
on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

concurrency:
  group: quality-gate-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: fraiseql
          POSTGRES_PASSWORD: fraiseql
          POSTGRES_DB: fraiseql_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'
        cache-dependency-path: '**/pyproject.toml'

    - name: Install uv
      uses: astral-sh/setup-uv@v6

    - name: Install dependencies
      run: |
        uv pip install --system -e ".[dev,all]"

    - name: Run core tests with coverage
      env:
        DATABASE_URL: postgresql://fraiseql:fraiseql@localhost:5432/fraiseql_test
        TEST_DATABASE_URL: postgresql://fraiseql:fraiseql@localhost:5432/fraiseql_test
        DB_HOST: localhost
        DB_PORT: 5432
        DB_USER: fraiseql
        DB_PASSWORD: fraiseql
      run: |
        pytest tests/ --cov=src/fraiseql --cov-report=xml --cov-report=term-missing -v -m "not blog_simple and not blog_enterprise"

    - name: Run example integration tests
      env:
        DATABASE_URL: postgresql://fraiseql:fraiseql@localhost:5432/fraiseql_test
        TEST_DATABASE_URL: postgresql://fraiseql:fraiseql@localhost:5432/fraiseql_test
        DB_HOST: localhost
        DB_PORT: 5432
        DB_USER: fraiseql
        DB_PASSWORD: fraiseql
        FRAISEQL_ENVIRONMENT: ci
        FRAISEQL_AUTO_INSTALL: false
        FRAISEQL_LOG_LEVEL: INFO
      run: |
        pytest tests/integration/examples/ -v --tb=short

    - name: Upload coverage
      uses: codecov/codecov-action@v5
      with:
        file: ./coverage.xml
        flags: unittests
        name: Python-3.12
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Install uv
      uses: astral-sh/setup-uv@v6
    - name: Install dependencies
      run: uv pip install --system -e ".[dev]"
    - name: Run ruff check
      run: ruff check .
    - name: Run ruff format check
      run: ruff format --check .

  security:
    name: Security
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Install uv
      uses: astral-sh/setup-uv@v6
    - name: Install dependencies
      run: uv pip install --system -e ".[dev]"
    - name: Run bandit
      run: bandit -r src/ -f json || true

  # Quality gate summary job - this job fails if any quality check fails
  quality-gate:
    name: Quality Gate ‚úÖ
    runs-on: ubuntu-latest
    needs: [test, lint, security]
    if: always()
    steps:
      - name: Check quality gate status
        run: |
          # This job will fail if any of the required jobs failed
          if [[ "${{ needs.test.result }}" != "success" ]]; then
            echo "‚ùå Tests failed - Quality gate blocked"
            exit 1
          fi
          if [[ "${{ needs.lint.result }}" != "success" ]]; then
            echo "‚ùå Lint checks failed - Quality gate blocked"
            exit 1
          fi
          if [[ "${{ needs.security.result }}" != "success" ]]; then
            echo "‚ùå Security checks failed - Quality gate blocked"
            exit 1
          fi
          echo "‚úÖ All quality checks passed - Quality gate open"
          echo "üöÄ Code is ready for merge/release"
