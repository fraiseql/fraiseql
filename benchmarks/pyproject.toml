[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "fraiseql-benchmarks"
version = "0.1.0"
description = "LLM token cost analysis and performance benchmarks for FraiseQL"
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
authors = [
    { name = "FraiseQL Team" },
]
keywords = ["graphql", "benchmarks", "llm", "tokens", "performance"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    # Core dependencies
    "tiktoken>=0.8.0",
    "httpx>=0.28.1",
    "pydantic>=2.10.0",
    "pydantic-settings>=2.7.0",
    "python-dotenv>=1.1.0",
    "rich>=13.9.0",
    "click>=8.1.0",

    # Testing
    "pytest>=8.3.0",
    "pytest-asyncio>=0.25.0",
    "pytest-benchmark>=5.1.0",

    # Data processing
    "pandas>=2.2.0",
    "numpy>=2.2.0",
]

[project.optional-dependencies]
# LLM providers
openai = ["openai>=1.58.0"]
anthropic = ["anthropic>=0.40.0"]
local = ["transformers>=4.47.0", "torch>=2.5.0"]
all-llms = ["fraiseql-benchmarks[openai,anthropic,local]"]

# Visualization
viz = [
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "plotly>=5.18.0",
]

# Development
dev = [
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "types-pyyaml",
]

# Full installation
all = ["fraiseql-benchmarks[all-llms,viz,dev]"]

[project.scripts]
fraiseql-bench = "fraiseql_benchmarks.cli:main"
fraiseql-bench-token = "fraiseql_benchmarks.token_analysis:main"
fraiseql-bench-perf = "fraiseql_benchmarks.performance:main"

[tool.hatch.build.targets.wheel]
packages = ["fraiseql_benchmarks"]

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.ruff]
target-version = "py39"
line-length = 100
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long
    "B008",  # do not perform function calls in argument defaults
]

[tool.black]
line-length = 100
target-version = ['py39']

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
