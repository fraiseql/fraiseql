# Ultra-optimized Dockerfile with read replica support
FROM python:3.11-alpine

WORKDIR /app

# Performance-optimized packages
RUN apk add --no-cache \
    postgresql-client \
    gcc \
    musl-dev \
    curl \
    supervisor \
    nginx \
    libpq-dev \
    python3-dev

# Note: Alpine uses musl libc which has efficient memory allocation

# Container-optimized environment variables
ENV MALLOC_ARENA_MAX=2
ENV MALLOC_MMAP_THRESHOLD=131072
ENV MALLOC_TRIM_THRESHOLD=131072
ENV MALLOC_TOP_PAD=131072

# Python optimizations
ENV PYTHONMALLOC=malloc
ENV PYTHONMALLOCSTATS=1
ENV PYTHONASYNCIODEBUG=0
ENV PYTHONUNBUFFERED=1

# Copy requirements and install dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY . .

# Create Nginx configuration for load balancing
RUN mkdir -p /etc/nginx/sites-available /etc/nginx/sites-enabled
COPY nginx-ultra.conf /etc/nginx/sites-available/default
RUN ln -sf /etc/nginx/sites-available/default /etc/nginx/sites-enabled/default

# Create supervisor configuration
RUN mkdir -p /etc/supervisor/conf.d
COPY supervisord.ultra.nginx.conf /etc/supervisor/conf.d/supervisord.conf

# Database URLs
ENV DATABASE_URL_PRIMARY=postgresql://benchmark:benchmark@postgres-primary:5432/benchmark_db
ENV DATABASE_URL_REPLICAS=postgresql://benchmark:benchmark@pgpool:5432/benchmark_db
ENV ENABLE_READ_REPLICAS=true

# Container resource labels
LABEL container.memory="6g"
LABEL container.cpu="4"
LABEL container.swap="2g"

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost/health || exit 1

# Start supervisor to manage Nginx and multiple workers
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]
