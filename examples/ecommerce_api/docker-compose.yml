version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ecommerce
      POSTGRES_PASSWORD: ecommerce123
      POSTGRES_DB: ecommerce
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ecommerce"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://ecommerce:ecommerce123@postgres:5432/ecommerce
      REDIS_URL: redis://redis:6379
      ENVIRONMENT: development
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    command: uvicorn app:app --host 0.0.0.0 --port 8000 --reload

  migrate:
    image: postgres:15-alpine
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PGHOST: postgres
      PGUSER: ecommerce
      PGPASSWORD: ecommerce123
      PGDATABASE: ecommerce
    volumes:
      - ./db:/db
    command: >
      sh -c "
        echo 'Running migrations...' &&
        psql -f /db/migrations/001_initial_schema.sql &&
        psql -f /db/views/product_views.sql &&
        psql -f /db/views/customer_order_views.sql &&
        psql -f /db/functions/cart_functions.sql &&
        psql -f /db/functions/order_functions.sql &&
        psql -f /db/functions/customer_functions.sql &&
        echo 'Migrations completed!'
      "

volumes:
  postgres_data:
  redis_data:
